// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// all enums here
enum Role{
  MEMBER
  ADMIN
}

enum Priority{
  Heigh
  MEDIUM
  LOW
}

enum Status{
  NOT_STARTED
  IN_PROGRESS
  COMPLETE
  STACK
}

enum ParentType{
  TASK
  SUB_TASK
}


// all models here
model User {
  id String @id @default(uuid())
  username String 
  email String @unique
  password String?
  role Role @default(MEMBER)
  status Boolean @default(true)
  avatar String?
  tasks Task[]
  sub_tasks SubTask[]
  comments Comment[]
  assigned_tasks Task[] @relation("AssignedTask")
  created_tasks Task[] @relation("CreatedTask")
  last_login DateTime @default(now())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  check_lists CheckList[]
}

model Task{
  id String @id @default(uuid())
  user_id String
  user User @relation(fields: [user_id], references: [id])
  title String
  description String
  priority Priority @default(MEDIUM)
  due_date DateTime
  assign_members User[] @relation("AssignedTask")
  attachment String
  status Status @default(NOT_STARTED)
  is_complete Boolean @default(false)
  created_by String
  creator User  @relation("CreatedTask", fields: [created_by], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  comments Comment[]
  sub_tasks SubTask[]
  attchment String?
  check_lists CheckList[]
}

model SubTask{
  id String @id @default(uuid())
  task Task @relation(fields: [task_id], references: [id])
  task_id String
  title String
  description String
  assinged_id String
  assinged User @relation(fields: [assinged_id], references: [id])
  priority Priority @default(MEDIUM)
  status Status @default(NOT_STARTED)
  due_date DateTime 
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  attchment String?
  check_lists CheckList[]
}

model CheckList{
  id String @id @default(uuid())
  parent_type ParentType @default(TASK)
  parent_id String
  title String
  created_by User @relation(fields: [user_id], references: [id])
  user_id String
  task Task @relation(fields: [task_id], references: [id])
  task_id String
  sub_task SubTask @relation(fields: [sub_task_id], references: [id])
  sub_task_id String
}

model Comment{
  id String @id @default(uuid())
  content String
  author User @relation(references: [id], fields: [author_id])
  author_id String
  task Task @relation(references: [id], fields: [task_id])
  task_id String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}